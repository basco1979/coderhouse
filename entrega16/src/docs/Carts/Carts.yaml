paths: 
  /api/carts/:
    post:
      summary: Create a new cart
      tags:
        - Carts
      requestBody:
        required: true
        description: Create a new cart
        $ref: "#components/requestBodies/createCart"
  /api/carts/{cid}:
    get:
      summary: Gets a single cart from its id
      tags: 
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: ID of the cart you wish to request
        schema:
          $type: String
      responses:
        "200":
          description: The requested cart 
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Cart"
        "404": 
          description: NOT FOUND Error. Cart with given ID not found.
    put:
      summary: Update cart by id
      tags: 
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: cart id to update
        schema:
          $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/updateCart"
      responses:
        "200":
          description: The requested cart was updated 
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Cart"
        "404": 
          description: NOT FOUND Error. Cart with given ID not found.
    delete:
      summary: Empty cart by id
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: id to empty a cart
          schema:
            $type: String
      responses:
        '200':
          description: empty cart
        '404':
          description: NOT FOUND
  /api/carts/{cid}/product/{pid}:
    post:
      summary: Add product to the cart
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: cart id to add product
        schema:
          $type: String
      - name: pid
        in: path
        required: true
        description: product id to add to the cart
        schema:
          $type: String
      responses:
        "200":
          description: The requested product was added to the cart 
        "404": 
          description: NOT FOUND Error.
    put:
      summary: Update quantity of a specific product in the cart
      tags: 
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: cart id to update
        schema:
          $type: String
      - name: pid
        in: path
        required: true
        description: product id to update in the cart
        schema:
          $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/updateProductInCart"
      responses:
        "200":
          description: product quantity updated 
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Cart"
        "404": 
          description: NOT FOUND Error.
    delete:
      summary: Delete an specific product in the cart
      tags: 
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: cart id to update
        schema:
          $type: String
      - name: pid
        in: path
        required: true
        description: product id to delete in the cart
        schema:
          $type: String
      responses:
        "200":
          description: The requested product was deleted in the cart 
        "404": 
          description: NOT FOUND Error. Cart with given ID not found.
  /api/carts/{cid}/purchase:
    put:
      summary: Update cart after purchase, leaving only products out of stock 
      tags: 
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: cart id to update
        schema:
          $type: String
      responses:
        "200":
          description: The requested cart was updated after the purchase
        "404": 
          description: NOT FOUND Error. Cart with given ID not found.
components:
  schemas:
    Cart:
      type: object
      properties:
        _id : 
          type: ObjectId
          description: Mongo autogenerated Id
        products:
          type: array
          description: products in the cart
      example:
        _id: ObjectId("659ae264f4657026ba820e73")
        products :  
          [
          {
          "product": {
          "_id": "65a1ab4be75e71bdfd8b1f53",
          "title": "Doilies - 8, Paper",
          "description": "Soup - Campbells",
          "code": "IE55 LNSJ 2096 6504 8984 86",
          "price": 798.5,
          "status": true,
          "stock": 1,
          "category": "Outdoors",
          "thumbnail": [
          "img/imagen-no-disponible.jpg"
          ],
          "updatedAt": "2024-03-04T22:02:21.851Z",
          "owner": "admin"
          },
          "quantity": 5,
          "_id": "65e64545659a449a28478e32"
          },
          {
          "product": {
          "_id": "65a1ab4be75e71bdfd8b1f51",
          "title": "Mushroom - Shitake, Fresh",
          "description": "Ice - Clear, 300 Lb For Carving",
          "code": "GB68 TFUI 0812 9911 7310 12",
          "price": 726.7,
          "status": true,
          "stock": 37,
          "category": "Computers",
          "thumbnail": [
          "img/imagen-no-disponible.jpg"
          ],
          "updatedAt": "2024-03-27T10:46:52.957Z",
          "owner": "admin"
          },
          "quantity": 1,
          "_id": "66047129c5db5eecc2de9ade"
          }
          ]
     
  requestBodies:
    createCart:
      type: object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/createCart"
            properties:
              products:
                type: array
                description: Initiate an empty shopping cart with no product.
            example:
              products: []
    updateCart:
      type: object
      properties:
        products:
          type: array
          description: products in the cart
      example:
        products: 
          [
          {
          "product": {
          "_id": "65a1ab4be75e71bdfd8b1f53",
          "title": "Doilies - 8, Paper",
          "description": "Soup - Campbells",
          "code": "IE55 LNSJ 2096 6504 8984 86",
          "price": 798.5,
          "status": true,
          "stock": 1,
          "category": "Outdoors",
          "thumbnail": [
          "img/imagen-no-disponible.jpg"
          ],
          "updatedAt": "2024-03-04T22:02:21.851Z",
          "owner": "admin"
          },
          "quantity": 5,
          "_id": "65e64545659a449a28478e32"
          }]